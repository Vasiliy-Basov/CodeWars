# --------------------------------------------------------------------------
# Git Hub Actions
#
# Vasiliy Basov
# --------------------------------------------------------------------------
name: My-GitHubActions-Basics # Recommendation: Without spaces
env:                          # Здесь прописываем наши глобальные переменные которые видны во всех jobs
  APPLICATION_NAME       : "MyFlask"
  DEPLOY_PACKAGE_NAME    : "flask-deploy-ver-${{ github.sha }}" # github.sha - это встроенная в github переменная которая равна hash-у коммита (уникальный номер коммита)  

on:                           # Когда мы хоти чтобы скрипт запускался ctrl + space дает выбрать варианты
  push:                       # Несколько значений прописываются через запятую
    branches:                 # Например на pull_reqest можно запускать проверку синтаксиса кода
      - master                # В этом примере Actions будет происходить в случае push на master branch
      
jobs:                         # jobs это как block в ansible, job ов может быть много, каждый job запускается на отдельной VM
  my_testing:                 # Имя нашего Job-а
    runs-on: ubuntu-latestяч    # По сути это докер, мы выбираем на какой системе будет запускаться наш job
    steps:                    # Это аналог tasks в ansible
      - name: Print Hello Message шт Testing
        run: echo "Hello World from Testing job"  # Здесь пишем команду линукса 
      - name: Execute few commands
        run: |
          echo "Hello Message1"
          echo "Hello Message2"
          echo "Application name: ${{ env.APPLICATION_NAME }}"  # ${{ env.APPLICATION_NAME }} - вызов нашей глобальной переменной
          
      - name: Git clone my Repo
        uses: actions/checkout@v3  # Клонируем наш репозиторий внутрь VM
        
      - name: list current folder # просмотр что у нас в каталоге на этой VM
        run: ls -la
        

        
  my_deploy:
    runs-on: ubuntu-latest
    needs: [my_testing]     # Означает что этот job запустится после my_testing job-а
    env:
      VAR1: "This is Job Level Variable1" # это локальные переменные только для job-а
      VAR2: "This is Job Level Variable2"
    
    steps:
       - name: Print Hello Message in Deploy
         run: echo "Hello World from Deploy job"
       - name: Print enc vars
         run: |
           echo "Var1 = ${{ env.VAR1 }}"
           echo "Var2 = ${{ env.VAR2 }}"
           echo "Var3 = $LOCAL_VAR" # Локальные переменные можно прописывать без скобок
         env:
           LOCAL_VAR: "This is Super local Enviroment variables"  # Локальная переменная для step
           
       - name: Printing Deployment package
         run: echo "Deploy package name is ${{ env.DEPLOY_PACKAGE_NAME }}"
       - name: Lets test some packages iof the are here 1
         run: aws --version                               # Смотрим есть ли такая команда в VM
       - name: Lets test some packages iof the are here 2
         run: zip --version                                        # Проверяем есть ли команда zip в VM
         
